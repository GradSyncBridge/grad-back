<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="backend.mapper.StudentMapper">

    <sql id="DynamicFields">
        <trim suffixOverrides=",">
            <if test="scope.id == true"> id, </if>
            <if test="scope.userId == true"> userId, </if>
            <if test="scope.birth == true"> birth, </if>
            <if test="scope.address == true"> address, </if>
            <if test="scope.majorGrad == true"> majorGrad, </if>
            <if test="scope.school == true"> school, </if>
            <if test="scope.type == true"> type, </if>
            <if test="scope.enrollment == true"> enrollment, </if>
            <if test="scope.reassign == true"> reassign, </if>
            <if test="scope.valid == true"> valid, </if>
            <if test="scope.examId  == true"> examId , </if>
            <if test="scope.emergency == true"> emergency, </if>
            <if test="scope.gradePrimary == true"> gradePrimary, </if>
            <if test="scope.gradeSecond == true"> gradeSecond, </if>
            <if test="scope.majorApply == true"> majorApply, </if>
            <if test="scope.majorStudy == true"> majorStudy, </if>
            <if test="scope.disabled == true"> disabled, </if>
            <if test="scope.quality == true"> quality, </if>
            <if test="scope.certifyId == true"> certifyId, </if>
        </trim>
    </sql>

    <sql id="DynamicWhere">
        <where>
            <if test="student.id != null"> and id = #{student.id} </if>
            <if test="student.userId != null"> and userId = #{student.userId} </if>
            <if test="student.birth != null"> and birth = #{student.birth} </if>
            <if test="student.address != null"> and address = #{student.address} </if>
            <if test="student.majorGrad != null"> and majorGrad = #{student.majorGrad} </if>
            <if test="student.school != null"> and school = #{student.school} </if>
            <if test="student.type != null"> and type = #{student.type} </if>
            <if test="student.enrollment != null"> and enrollment = #{student.enrollment} </if>
            <if test="student.reassign != null"> and reassign = #{student.reassign} </if>
            <if test="student.valid != null"> and valid = #{student.valid} </if>
            <if test="student.examId  != null"> and examId  = #{student.examId } </if>
            <if test="student.emergency != null"> and emergency = #{student.emergency} </if>
            <if test="student.gradePrimary != null"> and gradePrimary = #{student.gradePrimary} </if>
            <if test="student.gradeSecond != null"> and gradeSecond = #{student.gradeSecond} </if>
            <if test="student.majorApply != null"> and majorApply = #{student.majorApply} </if>
            <if test="student.majorStudy != null"> and majorStudy = #{student.majorStudy} </if>
            <if test="student.disabled != null"> and disabled = #{student.disabled} </if>
            <if test="student.quality != null"> and quality = #{student.quality} </if>
            <if test="student.certifyId != null"> and certifyId = #{student.certifyId} </if>
        </where>
    </sql>

    <insert id="insertStudent">
        insert into Student
        (
            userId,
            birth,
            address,
            majorGrad,
            school,
            type,
            enrollment,
            reassign,
            valid,
            examId ,
            emergency,
            gradePrimary,
            gradeSecond,
            majorApply,
            majorStudy,
            disabled,
            quality,
            certifyId
        )
        values
        (
            #{userId},
            #{birth},
            #{address},
            #{majorGrad},
            #{school},
            #{type},
            #{enrollment},
            #{reassign},
            #{valid},
            #{examId },
            #{emergency},
            #{gradePrimary},
            #{gradeSecond},
            #{majorApply},
            #{majorStudy},
            #{disabled},
            #{quality},
            #{certifyId}
        )
    </insert>

    <select id="selectStudent" resultType="backend.model.entity.Student">
        select
            <include refid="DynamicFields" />
        from Student
            <include refid="DynamicWhere" />
    </select>

    <update id="updateStudent">
        update Student
        <set>
            <if test="studentUpdate.userId != null"> userId = #{studentUpdate.userId}, </if>
            <if test="studentUpdate.birth != null"> birth = #{studentUpdate.birth}, </if>
            <if test="studentUpdate.address != null"> address = #{studentUpdate.address}, </if>
            <if test="studentUpdate.majorGrad != null"> majorGrad = #{studentUpdate.majorGrad}, </if>
            <if test="studentUpdate.school != null"> school = #{studentUpdate.school}, </if>
            <if test="studentUpdate.type != null"> type = #{studentUpdate.type}, </if>
            <if test="studentUpdate.enrollment != null"> enrollment = #{studentUpdate.enrollment}, </if>
            <if test="studentUpdate.reassign != null"> reassign = #{studentUpdate.reassign}, </if>
            <if test="studentUpdate.valid != null"> valid = #{studentUpdate.valid}, </if>
            <if test="studentUpdate.examId  != null"> examId  = #{studentUpdate.examId }, </if>
            <if test="studentUpdate.emergency != null"> emergency = #{studentUpdate.emergency}, </if>
            <if test="studentUpdate.gradePrimary != null"> gradePrimary = #{studentUpdate.gradePrimary}, </if>
            <if test="studentUpdate.gradeSecond != null"> gradeSecond = #{studentUpdate.gradeSecond}, </if>
            <if test="studentUpdate.majorApply != null"> majorApply = #{studentUpdate.majorApply}, </if>
            <if test="studentUpdate.majorStudy != null"> majorStudy = #{studentUpdate.majorStudy}, </if>
            <if test="studentUpdate.disabled != null"> disabled = #{studentUpdate.disabled}, </if>
            <if test="studentUpdate.quality != null"> quality = #{studentUpdate.quality}, </if>
            <if test="studentUpdate.certifyId != null"> certifyId = #{studentUpdate.certifyId}, </if>
        </set>
        <where>
            <if test="studentQuery.id != null"> and id = #{studentQuery.id} </if>
            <if test="studentQuery.userId != null"> and userId = #{studentQuery.userId} </if>
            <if test="studentQuery.birth != null"> and birth = #{studentQuery.birth} </if>
            <if test="studentQuery.address != null"> and address = #{studentQuery.address} </if>
            <if test="studentQuery.majorGrad != null"> and majorGrad = #{studentQuery.majorGrad} </if>
            <if test="studentQuery.school != null"> and school = #{studentQuery.school} </if>
            <if test="studentQuery.type != null"> and type = #{studentQuery.type} </if>
            <if test="studentQuery.enrollment != null"> and enrollment = #{studentQuery.enrollment} </if>
            <if test="studentQuery.reassign != null"> and reassign = #{studentQuery.reassign} </if>
            <if test="studentQuery.valid != null"> and valid = #{studentQuery.valid} </if>
            <if test="studentQuery.examId  != null"> and examId  = #{studentQuery.examId } </if>
            <if test="studentQuery.emergency != null"> and emergency = #{studentQuery.emergency} </if>
            <if test="studentQuery.gradePrimary != null"> and gradePrimary = #{studentQuery.gradePrimary} </if>
            <if test="studentQuery.gradeSecond != null"> and gradeSecond = #{studentQuery.gradeSecond} </if>
            <if test="studentQuery.majorApply != null"> and majorApply = #{studentQuery.majorApply} </if>
            <if test="studentQuery.majorStudy != null"> and majorStudy = #{studentQuery.majorStudy} </if>
            <if test="studentQuery.disabled != null"> and disabled = #{studentQuery.disabled} </if>
            <if test="studentQuery.quality != null"> and quality = #{studentQuery.quality} </if>
            <if test="studentQuery.certifyId != null"> and certifyId = #{studentQuery.certifyId} </if>
        </where>
    </update>

</mapper>