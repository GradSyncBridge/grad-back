<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="backend.mapper.QualityFileMapper">

    <sql id="DynamicFields">
        <trim suffixOverrides=",">
            <if test="scope.id == true"> id, </if>
            <if test="scope.userId == true"> user_id as "userId", </if>
            <if test="scope.file == true"> file, </if>
            <if test="scope.created == true"> created, </if>
        </trim>
    </sql>

    <sql id="DynamicWhere">
        <where>
            <if test="qualityFile.id != null"> and id = #{qualityFile.id} </if>
            <if test="qualityFile.userId != null"> and user_id = #{qualityFile.userId} </if>
            <if test="qualityFile.file != null"> and file = #{qualityFile.file} </if>
            <if test="qualityFile.created != null"> and created = #{qualityFile.created} </if>
        </where>
    </sql>

    <insert id="insertQualityFile">
        insert into QualityFile
        (
            user_id,
            file,
            created
        )
        values
        (
            #{userId},
            #{file},
            #{created}
        )

        <selectKey keyProperty="id" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="selectQualityFile" resultType="backend.model.entity.QualityFile">
        select
            <include refid="DynamicFields" />
        from QualityFile
            <include refid="DynamicWhere" />
    </select>

    <update id="updateQualityFile">
        update QualityFile
        <set>
            <if test="qualityFileUpdate.userId != null"> user_id = #{qualityFileUpdate.userId}, </if>
            <if test="qualityFileUpdate.file != null"> file = #{qualityFileUpdate.file}, </if>
            <if test="qualityFileUpdate.created != null"> created = #{qualityFileUpdate.created}, </if>
        </set>
        <where>
            <if test="qualityFileQuery.id != null"> and id = #{qualityFileQuery.id} </if>
            <if test="qualityFileQuery.userId != null"> and user_id = #{qualityFileQuery.userId} </if>
            <if test="qualityFileQuery.file != null"> and file = #{qualityFileQuery.file} </if>
            <if test="qualityFileQuery.created != null"> and created = #{qualityFileQuery.created} </if>
        </where>
    </update>

</mapper>