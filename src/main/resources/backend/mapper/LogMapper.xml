<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="backend.mapper.LogMapper">

    <sql id="DynamicFields">
        <trim suffixOverrides=",">
            <if test="scope.id == true"> id, </if>
            <if test="scope.userId == true"> user_id, </if>
            <if test="scope.content == true"> content, </if>
            <if test="scope.created == true"> created, </if>
        </trim>
    </sql>

    <sql id="DynamicWhere">
        <where>
            <if test="log.id != null"> and id = #{log.id} </if>
            <if test="log.userId != null"> and user_id = #{log.userId} </if>
            <if test="log.content != null"> and content = #{log.content} </if>
            <if test="log.created != null"> and created = #{log.created} </if>
        </where>
    </sql>

    <insert id="insertLog">
        insert into Log
        (userId, content, created)
        values
        (#{userId}, #{content}, #{created})
    </insert>

    <select id="selectLog" resultType="backend.model.entity.Log">
        select
            <include refid="DynamicFields" />
        from Log
            <include refid="DynamicWhere" />
    </select>

    <update id="updateLog">
        update Log
        <set>
            <if test="logUpdate.userId != null"> user_id = #{logUpdate.userId}, </if>
            <if test="logUpdate.content != null"> content = #{logUpdate.content}, </if>
            <if test="logUpdate.created != null"> created = #{logUpdate.created}, </if>
        </set>
        <where>
            <if test="logQuery.id != null"> and id = #{logQuery.id} </if>
            <if test="logQuery.userId != null"> and user_id = #{logQuery.userId} </if>
            <if test="logQuery.content != null"> and content = #{logQuery.content} </if>
            <if test="logQuery.created != null"> and created = #{logQuery.created} </if>
        </where>
    </update>

</mapper>